==========================================
SLURM_JOB_ID = 4217542
SLURM_JOB_NODELIST = gpu012
==========================================
Job started on gpu012 at Wed Aug  6 14:07:35 CEST 2025
Loading dataset
Dataset loaded
Loading tokenizer and model
Tokenizer loaded
Model loaded
Outlines model loaded
CLM model loaded
['LPAR', 'LSQB', 'LBRACE'] ['RPAR', 'RSQB', 'RBRACE']
CFG loaded
OOM when trying bs=32, trying smaller…
→ fits on GPU: micro_batch_size = 16

0


Token('partial', PartialTokensInfo(fsm_state_seq=(0, 2), is_not_finished=True, terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='_NEWLINE', can_transition=True, is_final=True),), final_terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='_NEWLINE', can_transition=True, is_final=True),))) 0
0

def
Token('_NEWLINE', '\n') 0
Token('partial', PartialTokensInfo(fsm_state_seq=(0, 40, 137, 138), is_not_finished=True, terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='DEF', can_transition=False, is_final=True), PartialTerminalInfo(priority=1, terminal_name='NAME', can_transition=True, is_final=True)), final_terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='DEF', can_transition=False, is_final=True), PartialTerminalInfo(priority=1, terminal_name='NAME', can_transition=True, is_final=True)))) 0
0

def max
Token('_NEWLINE', '\n') 0
Token('DEF', 'def') 0
Token('partial', PartialTokensInfo(fsm_state_seq=(0, 46, 94, 26), is_not_finished=True, terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='NAME', can_transition=True, is_final=True),), final_terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='NAME', can_transition=True, is_final=True),))) 0
0

def max_
Token('_NEWLINE', '\n') 0
Token('DEF', 'def') 0
Token('partial', PartialTokensInfo(fsm_state_seq=(0, 46, 94, 26, 26), is_not_finished=True, terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='NAME', can_transition=True, is_final=True),), final_terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='NAME', can_transition=True, is_final=True),))) 0
0

def max_non
Token('_NEWLINE', '\n') 0
Token('DEF', 'def') 0
Token('partial', PartialTokensInfo(fsm_state_seq=(0, 46, 94, 26, 26, 26, 26, 26), is_not_finished=True, terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='NAME', can_transition=True, is_final=True),), final_terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='NAME', can_transition=True, is_final=True),))) 0
0

def max_non_
Token('_NEWLINE', '\n') 0
Token('DEF', 'def') 0
Token('partial', PartialTokensInfo(fsm_state_seq=(0, 46, 94, 26, 26, 26, 26, 26, 26), is_not_finished=True, terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='NAME', can_transition=True, is_final=True),), final_terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='NAME', can_transition=True, is_final=True),))) 0
0

def max_non_over
Token('_NEWLINE', '\n') 0
Token('DEF', 'def') 0
Token('partial', PartialTokensInfo(fsm_state_seq=(0, 46, 94, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26), is_not_finished=True, terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='NAME', can_transition=True, is_final=True),), final_terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='NAME', can_transition=True, is_final=True),))) 0
0

def max_non_overla
Token('_NEWLINE', '\n') 0
Token('DEF', 'def') 0
Token('partial', PartialTokensInfo(fsm_state_seq=(0, 46, 94, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26), is_not_finished=True, terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='NAME', can_transition=True, is_final=True),), final_terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='NAME', can_transition=True, is_final=True),))) 0
0

def max_non_overlapping
Token('_NEWLINE', '\n') 0
Token('DEF', 'def') 0
Token('partial', PartialTokensInfo(fsm_state_seq=(0, 46, 94, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26), is_not_finished=True, terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='NAME', can_transition=True, is_final=True),), final_terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='NAME', can_transition=True, is_final=True),))) 0
0

def max_non_overlapping_
Token('_NEWLINE', '\n') 0
Token('DEF', 'def') 0
Token('partial', PartialTokensInfo(fsm_state_seq=(0, 46, 94, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26), is_not_finished=True, terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='NAME', can_transition=True, is_final=True),), final_terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='NAME', can_transition=True, is_final=True),))) 0
0

def max_non_overlapping_tasks
Token('_NEWLINE', '\n') 0
Token('DEF', 'def') 0
Token('partial', PartialTokensInfo(fsm_state_seq=(0, 46, 94, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26), is_not_finished=True, terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='NAME', can_transition=True, is_final=True),), final_terminals_and_info=(PartialTerminalInfo(priority=0, terminal_name='NAME', can_transition=True, is_final=True),))) 0
0

def max_non_overlapping_tasks(
Token('_NEWLINE', '\n') 0
Token('DEF', 'def') 0
Token('NAME', 'max_non_overlapping_tasks') 0
Token('LPAR', '(') 0
Job finished at Wed Aug  6 14:09:48 CEST 2025
